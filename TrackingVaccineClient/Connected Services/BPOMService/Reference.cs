//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TrackingVaccineClient.BPOMService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BPOMService.IBPOMService")]
    public interface IBPOMService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBPOMService/Verify", ReplyAction="http://tempuri.org/IBPOMService/VerifyResponse")]
        bool Verify(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBPOMService/Verify", ReplyAction="http://tempuri.org/IBPOMService/VerifyResponse")]
        System.Threading.Tasks.Task<bool> VerifyAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBPOMService/Arrived", ReplyAction="http://tempuri.org/IBPOMService/ArrivedResponse")]
        bool Arrived(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBPOMService/Arrived", ReplyAction="http://tempuri.org/IBPOMService/ArrivedResponse")]
        System.Threading.Tasks.Task<bool> ArrivedAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBPOMService/Used", ReplyAction="http://tempuri.org/IBPOMService/UsedResponse")]
        bool Used(string code, string NIK);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBPOMService/Used", ReplyAction="http://tempuri.org/IBPOMService/UsedResponse")]
        System.Threading.Tasks.Task<bool> UsedAsync(string code, string NIK);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBPOMServiceChannel : TrackingVaccineClient.BPOMService.IBPOMService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BPOMServiceClient : System.ServiceModel.ClientBase<TrackingVaccineClient.BPOMService.IBPOMService>, TrackingVaccineClient.BPOMService.IBPOMService {
        
        public BPOMServiceClient() {
        }
        
        public BPOMServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BPOMServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BPOMServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BPOMServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Verify(int id) {
            return base.Channel.Verify(id);
        }
        
        public System.Threading.Tasks.Task<bool> VerifyAsync(int id) {
            return base.Channel.VerifyAsync(id);
        }
        
        public bool Arrived(int id) {
            return base.Channel.Arrived(id);
        }
        
        public System.Threading.Tasks.Task<bool> ArrivedAsync(int id) {
            return base.Channel.ArrivedAsync(id);
        }
        
        public bool Used(string code, string NIK) {
            return base.Channel.Used(code, NIK);
        }
        
        public System.Threading.Tasks.Task<bool> UsedAsync(string code, string NIK) {
            return base.Channel.UsedAsync(code, NIK);
        }
    }
}
